<application>
  <component name="McpToolsStoreService">
    <option name="servers" value="[{&quot;name&quot;:&quot;laravel-boost&quot;,&quot;status&quot;:&quot;running&quot;,&quot;tools&quot;:[{&quot;name&quot;:&quot;list-available-config-keys&quot;,&quot;description&quot;:&quot;List all available Laravel configuration keys (from config/*.php) in dot notation.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;last-error&quot;,&quot;description&quot;:&quot;Get details of the last error/exception created in this application on the backend. Use browser-log tool for browser errors.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;list-artisan-commands&quot;,&quot;description&quot;:&quot;List all available Artisan commands registered in this application.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;database-schema&quot;,&quot;description&quot;:&quot;Read the database schema for this application, including table names, columns, data types, indexes, foreign keys, and more.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;database&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;filter&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;report-feedback&quot;,&quot;description&quot;:&quot;Report feedback from the user on what would make Boost, or their experience with Laravel, better. Ask the user for more details before use if ambiguous or unclear. This is only for feedback related to Boost or the Laravel ecosystem.\nDo not provide additional information, you must only share what the user shared.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;feedback&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;feedback&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;database-query&quot;,&quot;description&quot;:&quot;Execute a read-only SQL query against the configured database.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;query&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;database&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;query&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;get-config&quot;,&quot;description&quot;:&quot;Get the value of a specific config variable using dot notation (e.g., \&quot;app.name\&quot;, \&quot;database.default\&quot;)&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;key&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;application-info&quot;,&quot;description&quot;:&quot;Get comprehensive application information including PHP version, Laravel version, database engine, all installed packages with their versions, and all Eloquent models in the application. You should use this tool on each new chat, and use the package \u0026 version data to write version specific code for the packages that exist.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;search-docs&quot;,&quot;description&quot;:&quot;Search for up-to-date version-specific documentation related to this project and its packages. This tool will search Laravel hosted documentation based on the packages installed and is perfect for all Laravel ecosystem packages. Laravel, Inertia, Pest, Livewire, Filament, Nova, Tailwind, and more.\nYou must use this tool to search for Laravel-ecosystem docs before using other approaches. The results provided are for this project\u0027s package version and does not cover all versions of the package.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;queries&quot;:{&quot;type&quot;:&quot;array&quot;},&quot;packages&quot;:{&quot;type&quot;:&quot;array&quot;},&quot;token_limit&quot;:{&quot;type&quot;:&quot;integer&quot;}},&quot;required&quot;:[&quot;queries&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;list-available-env-vars&quot;,&quot;description&quot;:&quot; List all available environment variable names from a given .env file (default .env).&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;filename&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;get-absolute-url&quot;,&quot;description&quot;:&quot;Get the absolute URL for a given relative path or named route. If no arguments are provided, you will get the absolute URL for \&quot;/\&quot;&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;path&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;route&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;read-log-entries&quot;,&quot;description&quot;:&quot;Read the last N log entries from the application log, correctly handling multi-line PSR-3 formatted logs. Only works for log files.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;entries&quot;:{&quot;type&quot;:&quot;integer&quot;}},&quot;required&quot;:[&quot;entries&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;browser-logs&quot;,&quot;description&quot;:&quot;Read the last N log entries from the BROWSER log. Very helpful for debugging the frontend and JS/Javascript&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;entries&quot;:{&quot;type&quot;:&quot;integer&quot;}},&quot;required&quot;:[&quot;entries&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;tinker&quot;,&quot;description&quot;:&quot;Execute PHP code in the Laravel application context, like artisan tinker.\nUse this for debugging issues, checking if functions exist, and testing code snippets.\nYou should not create models directly without explicit user approval. Prefer Unit/Feature tests using factories for functionality testing. Prefer existing artisan commands over custom tinker code.\nReturns the output of the code, as well as whatever is \&quot;returned\&quot; using \&quot;return\&quot;.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;code&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;timeout&quot;:{&quot;type&quot;:&quot;integer&quot;}},&quot;required&quot;:[&quot;code&quot;]},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;list-routes&quot;,&quot;description&quot;:&quot;List all available routes defined in the application, including Folio routes if used&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;method&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;action&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;domain&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;path&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;except_path&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;except_vendor&quot;:{&quot;type&quot;:&quot;boolean&quot;},&quot;only_vendor&quot;:{&quot;type&quot;:&quot;boolean&quot;}}},&quot;_status&quot;:&quot;enabled&quot;},{&quot;name&quot;:&quot;database-connections&quot;,&quot;description&quot;:&quot;List the configured database connection names for this application.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{}},&quot;_status&quot;:&quot;enabled&quot;}]},{&quot;name&quot;:&quot;herd&quot;,&quot;status&quot;:&quot;running&quot;,&quot;tools&quot;:[{&quot;name&quot;:&quot;get_all_php_versions&quot;,&quot;description&quot;:&quot;Get a list of all PHP versions and their status (installed, in-use, etc.) from Laravel Herd.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{},&quot;required&quot;:[]},&quot;_status&quot;:&quot;disabled&quot;},{&quot;name&quot;:&quot;install_php_version&quot;,&quot;description&quot;:&quot;Installs or updates a specific PHP version on your system&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;version&quot;]},&quot;_status&quot;:&quot;disabled&quot;},{&quot;name&quot;:&quot;get_all_sites&quot;,&quot;description&quot;:&quot;Get a list of all sites provided by Laravel Herd on your system. This includes information such as site names, URLs, paths, secure status, environment variables, the PHP version that is used, and more.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{},&quot;required&quot;:[]},&quot;_status&quot;:&quot;disabled&quot;},{&quot;name&quot;:&quot;get_site_information&quot;,&quot;description&quot;:&quot;Get information about the current project. This includes information such as the site URL, path, secure status (HTTPS enabled), environment variables, the PHP version that is used to serve this site, and more.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{},&quot;required&quot;:[]},&quot;_status&quot;:&quot;disabled&quot;},{&quot;name&quot;:&quot;secure_or_unsecure_site&quot;,&quot;description&quot;:&quot;Secure or unsecure the current site by enabling or disabling HTTPS.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;shouldSecure&quot;:{&quot;type&quot;:&quot;boolean&quot;}},&quot;required&quot;:[&quot;shouldSecure&quot;]},&quot;_status&quot;:&quot;disabled&quot;},{&quot;name&quot;:&quot;isolate_or_unisolate_site&quot;,&quot;description&quot;:&quot;Isolate or Un-isolate the current site. Isolating means that the site will use a specific PHP version, rather than the global PHP version. Un-isolating removes this isolation and uses the global PHP version for the site.&quot;,&quot;inputSchema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;shouldIsolate&quot;:{&quot;type&quot;:&quot;boolean&quot;},&quot;phpVersion&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;shouldIsolate&quot;]},&quot;_status&quot;:&quot;disabled&quot;}]}]" />
  </component>
</application>